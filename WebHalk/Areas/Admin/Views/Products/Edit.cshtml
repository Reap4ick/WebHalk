@model WebHalk.Areas.Admin.Models.Products.ProductAdminEditViewModel

<div class="container col-md-4 mt-4">
    <h2 class="text-center">Editing a product</h2>

    <form asp-action="Edit" enctype="multipart/form-data">
        <div class="form-group">
            <label for="Name">Product Name</label>
            <input type="text" name="Name" id="Name" class="form-control" value="@Model.Name" />
            <span class="text-danger">@ViewData.ModelState["Name"]?.Errors.FirstOrDefault()?.ErrorMessage</span>
        </div>

        <div class="form-group">
            <label for="Price">Price</label>
            <input type="number" name="Price" id="Price" class="form-control" value="@Model.Price" />
            <span class="text-danger">@ViewData.ModelState["Price"]?.Errors.FirstOrDefault()?.ErrorMessage</span>
        </div>

        <div class="form-group">
            <label for="CategoryId">Category</label>
            <select name="CategoryId" id="CategoryId" class="form-control">
                @foreach (var category in Model.CategoryList)
                {
                    <option value="@category.Value" @(category.Value == Model.CategoryId.ToString() ? "selected" : "")>@category.Text</option>
                }
            </select>
            <span class="text-danger">@ViewData.ModelState["CategoryId"]?.Errors.FirstOrDefault()?.ErrorMessage</span>
        </div>

        <div class="form-group mt-3">
            <p class="text-primary text-center">Завантажити нові фото:</p>
            <label id="selectImages">
                <img class="img_upload" src="/img/input.png" width="120" alt="обрати фото" style="cursor:pointer" />
            </label>
            <input type="file" id="images" multiple class="form-control d-none" />
        </div>

        <div class="mt-4">
            <div id="imageContainer" class="d-flex justify-content-evenly flex-wrap">
                @foreach (var existingPhoto in Model.Images)
                {
                    <div class="img_container">
                        <img class="img_preview" src="@Url.Content(existingPhoto.Name)" />
                        <button type="button" class="img_kaban-delete" data-photo-id="@existingPhoto.Id">X</button>
                    </div>
                }
            </div>
        </div>

        <div class="form-group d-flex justify-content-between mt-4">
            <a asp-action="Index" class="btn btn-outline-danger">Cancel</a>
            <button type="submit" class="btn btn-outline-primary">Update</button>
        </div>
    </form>
</div>


@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

<script>
     let id = 0;
        const imageContainer = document.getElementById('imageContainer');

        // Додаємо обробник подій для кнопок видалення фотографій
        const deleteButtons = document.querySelectorAll('.img_kaban-delete');
        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const photoId = button.getAttribute('data-photo-id');

                console.log("Delete item", photoId);

                var fileItem = document.createElement('input');
                fileItem.type = 'hidden';
                fileItem.classList.add('d-none')
                fileItem.name = "DeletedPhotoIds[]";
                fileItem.value = photoId;

                imageContainer.appendChild(fileItem);
                // Ваша логіка видалення фотографії
                // Ви можете робити запит до сервера для видалення фотографії
                // або виконувати інші дії для видалення фотографії

                // Після успішного видалення видаліть елемент зі сторінки
                const imgContainer = button.closest('.img_container');
                imgContainer.remove();
            });
        });
</script>

<script>
    let selectImages = document.getElementById("selectImages");
        selectImages.addEventListener("click", function () {
            // Генеруємо id для фото
            id = generateUniqueId();
            var fileItem = document.createElement('input');
            fileItem.type = 'file';
            fileItem.classList.add('d-none')
            fileItem.onchange = handleFileSelect;
            fileItem.name = "NewImages";
            fileItem.id = id;
            imageContainer.appendChild(fileItem);
            fileItem.click();
        });

        function handleFileSelect(event) {
            const fileInput = event.target;

            if (fileInput.files.length > 0) {

                const imgContainer = document.createElement('div');
                imgContainer.dataset.id = id; // Зберігаємо id input

                imgContainer.classList.add('img_container');

                const file = fileInput.files[0];

                const imgElement = document.createElement('img');
                imgElement.classList.add('img_preview');
                imgElement.src = URL.createObjectURL(file);

                const deleteButton = document.createElement('button');
                deleteButton.innerText = 'X';
                deleteButton.classList.add('img_preview-delete');
                deleteButton.type = 'button';
               
                deleteButton.addEventListener('click', function () {
                    console.log("file input id ", imgContainer.dataset.id);
                    document.getElementById(imgContainer.dataset.id).remove(); //видаляю також сам input file
                    imageContainer.removeChild(imgContainer); //видаляємо сам контейр для однієї фото
                });
                imgContainer.appendChild(imgElement);
                imgContainer.appendChild(deleteButton);
                imageContainer.appendChild(imgContainer);

            }
        }
        function generateUniqueId() {
            // Create a timestamp-based part of the ID
            const timestampPart = new Date().getTime().toString(16);

            // Create a random number part of the ID
            const randomPart = Math.floor(Math.random() * 1000000).toString(16);

            // Concatenate the two parts to create a unique ID
            const uniqueId = timestampPart + randomPart;

            return uniqueId;
        }
</script>